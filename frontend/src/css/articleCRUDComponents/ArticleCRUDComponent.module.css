/* VARIÁVEIS - Idealmente, estas estariam em um arquivo global (ex: variables.css) */
/* Se este arquivo for independente, inclua as variáveis necessárias aqui */
:root {
  --color-button: #4f0b82;
  --color-button-hover: #7e44b8; 
  --button-white: #FFFFFF;
  --button-red: #c82333;
  /* Sua cor para o deleteButton */
  --button-red-hover: #f13a4c;
  /* Sua cor de hover para vermelho */

}
.input {
  /* Alinhamento */
  text-align: left;

  /* Bordas */
  border: 1px solid #ccc; /* Corrigindo todas as bordas */
  /* Ou, se precisar ser mais explícito:
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  border-left: 1px solid #ccc !important; /* Pode usar !important se necessário, mas evite se possível */
  border-right: 1px solid #ccc !important; /* Pode usar !important se necessário, mas evite se possível */


  /* Outras propriedades úteis */
  padding: 5px; /* Adiciona um pouco de espaço interno */
  box-sizing: border-box; /* Garante que padding e border não aumentem o tamanho total */
}

/* Se você quiser estilizar o container flex pai (opcional, mas pode ser útil) */
.flex-container { /* Você pode adicionar esta classe à sua div pai ou usar a existente */
  display: flex;
  align-items: center;
  width: 100%; /* Garante que o container ocupe toda a largura disponível */
}

/* Estilo para o seu input e para o componente CitySearch */
.input,
.city-search-container input, /* Assumindo que CitySearch renderiza um input */
.city-search-container > div /* Ou se CitySearch for uma div container */ {
  margin-left: auto; /* Esta é a mágica! Empurra o elemento para a direita */
  /* Mantenha seus outros estilos do input aqui */
  /* Exemplo: */
  /* border: 1px solid #ccc; */
  /* padding: 8px; */
  /* text-align: left; */ /* Como discutido anteriormente */
}

/* Opcional: Para garantir que o ícone e o label fiquem juntos e não quebrem linha desnecessariamente */
.label-group {
  display: flex; /* Torna o ícone e o parágrafo flex items */
  align-items: center; /* Alinha verticalmente o ícone e o texto do label */
  margin-right: 10px; /* Adiciona um pequeno espaço entre o label e o input (opcional) */
}

/* Se você usar a classe .label-group no HTML, seu styles.label pode não precisar de muito */
.label {
   font-weight: bold; 
   margin-bottom: 0; 
}
html[data-theme="dark"] {
  background-color: #121212;
  color: #eee;
}


/* Estilo para o input de busca */
.input {
  width: 100%;
  padding: 8px;
  font-size: 16px;
}

/* Estilo da lista de cidades */
.cityList {
  position: absolute;
  background-color: white;
  border: 1px solid #ccc;
  width: 100%; /* limita a largura */
  max-height: 200px;
  overflow-y: scroll; /* mostra a barra sempre */
  z-index: 10;
  list-style: none;
  margin: 0;
  padding: 0;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Cada item da lista */
.cityList li {
  padding: 8px;
  cursor: pointer;
  white-space: nowrap;        /* evita quebra de linha */
  overflow: hidden;           /* esconde overflow */
  text-overflow: ellipsis;    /* adiciona "..." se o texto for grande */
}

.cityList li:hover {
  background-color: #f0f0f0;
}

.componentButton {
  position: relative;
  /* Necessário para posicionar o ::before */
  background-color: var(--color-button);
  /* Fundo roxo escuro */
  color: var(--button-white);
  /* Texto branco */
  font-family: 'Inter', sans-serif;
  font-weight: 300;
  font-size: 15px;
  width: 100%;
  /* ou ajuste conforme o uso, ex: auto, fit-content */
  padding: 8px 12px;
  cursor: pointer;
  border: none;
  border-radius: 0%;
  /* Sem arredondamento */
  box-shadow: 0 5px 15px -3px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  /* Garante que ::before fique dentro */
  display: flex;
  /* Para alinhar ícone e texto */
  align-items: center;
  justify-content: center;
  /* Centraliza todo o conteúdo */
  gap: 8px;
  /* Espaçamento entre o ícone e o texto */
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  margin-bottom: 8px;
}

.componentButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(100% - 6px);
  /* Borda interna de 3px de cada lado */
  height: calc(100% - 6px);
  border: 1px solid var(--button-white);
  /* Borda interna branca */
  border-radius: 0%;
  /* Sem arredondamento */
  box-sizing: border-box;
  pointer-events: none;
  /* Garante que o clique passe para o botão */
  transition: border-color 0.3s ease;
  /* Transição para a cor da borda no hover */
}

.componentButton:hover {
  background-color: var(--color-button-hover);
  /* Fundo roxo mais claro no hover */
  color: var(--button-white);
  /* Mantém o texto branco no hover */
}

.componentButton:hover::before {
  border-color: var(--color-button-hover);
  /* Borda interna roxa mais clara no hover */
  border: 1px solid var(--button-white);
  /* Borda interna branca */

}

/* Estilo para ícones dentro do .componentButton */
.componentButton .buttonIcon {
  font-size: 1em;
  /* Tamanho do ícone em relação ao texto do botão */
  line-height: 1;
  /* Garante que o ícone não afete a altura da linha */
}

.deleteButton {
  background-color: var(--button-red);
  /* Aplica a cor definida */
  color: var(--button-white);
  /* Garante que o texto e ícone sejam brancos */
}

.deleteButton:hover {
  background-color: var(--button-red-hover);
  /* Aplica a cor de hover */
  
}

.deleteButton:hover::before {
  border-color: var(--button-red-hover);
  /* Se você tem borda interna, mude a cor dela no hover */
    border: 1px solid var(--button-white);

}

/* Media Query de exemplo para responsividade, se necessário para este botão genérico */
@media (max-width: 768px) {
  .componentButton {
    font-size: 0.9em;
    padding: 7px 10px;
  }

  .componentButton::before {
    width: calc(100% - 4px);
    height: calc(100% - 4px);
  }
}