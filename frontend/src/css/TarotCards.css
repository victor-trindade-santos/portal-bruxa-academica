.tarot-title {
  color: #8a2be2;
  font-size: 28px;
  text-align: center;
  margin-bottom: 20px;
}

.starot-cards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  justify-content: center;
  margin-top: 10px;
}

.tarot-card {
  width: 80px;
  height: 128px;
  cursor: pointer;
  transition: transform 0.2s;
}

.tarot-card:hover {
  transform: scale(1.05);
}

.tarot-card-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 6px;
}


.componentButton {
  position: relative;
  /* Necess√°rio para posicionar o ::before */
  background-color: var(--color-button);
  /* Fundo roxo escuro */
  color: var(--button-white);
  /* Texto branco */
  font-family: 'Inter', sans-serif;
  font-weight: 300;
  font-size: 15px;
  width: 25%;
  /* ou ajuste conforme o uso, ex: auto, fit-content */
  padding: 8px 12px;
  cursor: pointer;
  border: none;
  border-radius: 0%;
  /* Sem arredondamento */
  box-shadow: 0 5px 15px -3px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  /* Garante que ::before fique dentro */
  display: flex;
  /* Para alinhar √≠cone e texto */
  align-items: center;
  justify-content: center;
  /* Centraliza todo o conte√∫do */
  gap: 8px;
  /* Espa√ßamento entre o √≠cone e o texto */
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  margin-bottom: 8px;
}

.componentButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(100% - 6px);
  /* Borda interna de 3px de cada lado */
  height: calc(100% - 6px);
  border: 1px solid var(--button-white);
  /* Borda interna branca */
  border-radius: 0%;
  /* Sem arredondamento */
  box-sizing: border-box;
  pointer-events: none;
  /* Garante que o clique passe para o bot√£o */
  transition: border-color 0.3s ease;
  /* Transi√ß√£o para a cor da borda no hover */
}

.componentButton:hover {
  background-color: var(--color-button-hover);
  /* Fundo roxo mais claro no hover */
  color: var(--button-white);
  /* Mant√©m o texto branco no hover */
}

.componentButton:hover::before {
  border-color: var(--color-button-hover);
  /* Borda interna roxa mais clara no hover */
  border: 1px solid var(--button-white);
  /* Borda interna branca */

}

/* Estilo para √≠cones dentro do .componentButton */
.componentButton .buttonIcon {
  font-size: 1em;
  /* Tamanho do √≠cone em rela√ß√£o ao texto do bot√£o */
  line-height: 1;
  /* Garante que o √≠cone n√£o afete a altura da linha */
}

.componentButton {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto; /* üî• Isso centraliza horizontalmente */
}
.componentButton.disabled {
  background-color: #ccc;
  cursor: not-allowed;
  pointer-events: none;
}
.card-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 30px;
  padding: 20px;
  border: 2px solid #4f0b82;
  border-radius: 10px;
  background-color: #f0e6ff;
  margin-top: 10px;
  text-align: left;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  flex-direction: row;
}

.card-image {
  width: 200px;
  border-radius: 8px;
}

.card-content h2 {
  color: #4f0b82;
}

/* Media Query de exemplo para responsividade, se necess√°rio para este bot√£o gen√©rico */
@media (max-width: 768px) {
  .componentButton {
    font-size: 0.9em;
    padding: 7px 10px;
  }

  .componentButton::before {
    width: calc(100% - 4px);
    height: calc(100% - 4px);
  }

  .card-container {
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .card-image {
    width: 75%;
    max-width: 300px;
  }

  .card-content {
    text-align: left; /* Optional: keep text left-aligned if you prefer */
    width: 100%;
  }
}
